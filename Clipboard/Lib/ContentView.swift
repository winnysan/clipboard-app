import SwiftUI

/// Hlavn√© zobrazenie aplik√°cie zobrazuj√∫ce hist√≥riu skop√≠rovan√Ωch textov.
/// Ka≈æd√° polo≈æka v zozname je klikateƒæn√° a umo≈æ≈àuje r√Ωchle vlo≈æenie vybran√©ho textu.
struct ContentView: View {
    /// Odkaz na `ClipboardManager` pre spr√°vu hist√≥rie a interakcie so schr√°nkou.
    @ObservedObject var clipboardManager = ClipboardManager.shared

    /// Premenn√° na sledovanie, ktor√° polo≈æka je pod kurzorom my≈°i.
    @State private var hoveredItem: String? = nil

    var body: some View {
        VStack {
            /// N√°zov aplik√°cie zobrazen√Ω v hlaviƒçke.
            Text(LocalizedStringResource("clipboard_app_title"))
                .font(.headline)
                .padding()

            /// Zabezpeƒçenie spr√°vneho skrolovania pri zmene hist√≥rie.
            ScrollViewReader { proxy in
                ScrollView {
                    VStack(spacing: 8) { // Men≈°ie medzery medzi polo≈ækami
                        ForEach(clipboardManager.clipboardHistory, id: \.self) { text in
                            Button(action: {
                                print("üü° Kliknut√© na text: \(text)")
                                clipboardManager.pasteText(text)
                            }) {
                                HStack {
                                    /// Zobrazenie skop√≠rovan√©ho textu s obmedzen√≠m na 3 riadky.
                                    Text(text)
                                        .padding()
                                        .frame(maxWidth: .infinity, alignment: .leading) // Zarovnanie vƒæavo
                                        .lineLimit(3) // Obmedzenie poƒçtu riadkov
                                    Spacer()
                                }
                                .background(hoveredItem == text ? Color.white.opacity(0.25) : Color.white.opacity(0.15)) // Efekt hoveru
                                .cornerRadius(10)
                                .overlay(
                                    RoundedRectangle(cornerRadius: 10)
                                        .stroke(Color.gray.opacity(0.3), lineWidth: 1) // Jemn√Ω okraj
                                )
                                .contentShape(Rectangle()) // Klikateƒæn√° cel√° plocha
                                .onHover { hovering in
                                    withAnimation(.easeInOut(duration: 0.15)) {
                                        hoveredItem = hovering ? text : nil
                                    }
                                }
                            }
                            .buttonStyle(.plain) // Odstr√°nenie defaultn√©ho tlaƒçidlov√©ho ≈°t√Ωlu
                            .id(text) // Unik√°tne ID pre skrolovanie
                        }
                    }
                    .padding(.horizontal, 12) // Jemn√° medzera na krajoch zoznamu
                    .padding(.vertical, 5)
                }
                /// Automatick√© skrolovanie hore pri zmene hist√≥rie.
                .onChange(of: clipboardManager.clipboardHistory) {
                    withAnimation {
                        if let firstItem = clipboardManager.clipboardHistory.first {
                            proxy.scrollTo(firstItem, anchor: .top)
                        }
                    }
                }
            }
        }
        .frame(width: 300, height: 400)
    }
}
