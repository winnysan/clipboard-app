import Cocoa
import Combine

/// Trieda na spr√°vu syst√©mov√Ωch opr√°vnen√≠ pre aplik√°ciu.
/// Obsahuje funkcie na kontrolu opr√°vnen√≠ a aktualiz√°ciu ikonky stavovej li≈°ty.
class SystemPermissionManager: ObservableObject {
    static let shared = SystemPermissionManager()
    
    /// Oznamuje UI, ƒçi m√° aplik√°cia povolenie na ovl√°danie kl√°vesnice.
    @Published var hasPermission: Bool = AXIsProcessTrusted()
    
    private var permissionCheckTimer: AnyCancellable?
    private var lastPermissionState: Bool = AXIsProcessTrusted() // Uklad√° posledn√Ω stav opr√°vnenia

    /// Priv√°tny inicializ√°tor, aby bola trieda Singleton.
    private init() {}

    /// Spust√≠ nepretr≈æit√© sledovanie opr√°vnenia a aktualizuje ikonku stavovej li≈°ty.
    func startMonitoringPermission() {
        permissionCheckTimer = Timer.publish(every: 1, on: .main, in: .common)
            .autoconnect()
            .sink { _ in
                let newState = AXIsProcessTrusted()
                if newState != self.lastPermissionState {
                    self.lastPermissionState = newState
                    self.hasPermission = newState
                    StatusBarManager.shared.updateIcon(authorized: newState)

                    if !newState {
                        appLog("‚ö†Ô∏è Opr√°vnenie stratene! Pros√≠m, povoƒæte ho v nastaveniach.", level: .warning)
                    }
                }
            }
    }

    /// Ukonƒç√≠ sledovanie opr√°vnenia.
    func stopMonitoringPermission() {
        permissionCheckTimer?.cancel()
        permissionCheckTimer = nil
        appLog("üõë Sledovanie opr√°vnenia bolo zastaven√©.", level: .info)
    }

    /// Otvor√≠ syst√©mov√© nastavenia pre udelenie opr√°vnenia v **Privacy & Security > Accessibility**.
    func requestAccessibilityPermission() {
        appLog("üîì Kontrola opr√°vnenia na sledovanie kl√°vesnice...", level: .info)

        if hasPermission {
            appLog("‚úÖ Aplik√°cia u≈æ m√° po≈æadovan√© opr√°vnenie.", level: .info)
            return
        }

        let alert = NSAlert()
        alert.messageText = NSLocalizedString("accessibility_permission_required", comment: "Opr√°vnenie po≈æadovan√©")
        alert.informativeText = NSLocalizedString("accessibility_permission_message", comment: "Aplik√°cia potrebuje opr√°vnenie na sledovanie kl√°vesov√Ωch skratiek.")
        alert.addButton(withTitle: "OK")
        alert.runModal()

        appLog("‚ö†Ô∏è Aplik√°cia nem√° opr√°vnenie. Otv√°ram syst√©mov√© nastavenia...", level: .warning)
        openAccessibilitySettings()
    }

    /// Otvor√≠ syst√©mov√© nastavenia pre udelenie opr√°vnenia v **Privacy & Security > Accessibility**.
    func openAccessibilitySettings() {
        appLog("üîì Otv√°ram syst√©mov√© nastavenia pre opr√°vnenia...", level: .info)

        if let url = URL(string: "x-apple.systempreferences:com.apple.preference.security?Privacy_Accessibility") {
            NSWorkspace.shared.open(url)
        } else {
            appLog("‚ùå Nepodarilo sa otvori≈• syst√©mov√© nastavenia. Skontrolujte opr√°vnenia manu√°lne.", level: .error)
        }
    }
}
