import Foundation
import AppKit

/// Spr√°vca pre pr√°cu s obr√°zkami.
/// Zodpoved√° za ukladanie, naƒç√≠tanie a mazanie obr√°zkov pou≈æ√≠van√Ωch v hist√≥rii.
class ImageManager {
    /// Zdieƒæan√° singleton in≈°tancia.
    static let shared = ImageManager()

    /// Cesta k adres√°ru, kde sa ukladaj√∫ obr√°zky.
    private let imageDirectoryURL: URL

    /// Priv√°tny inicializ√°tor ‚Äì nastav√≠ cestu k adres√°ru.
    private init() {
        let baseDirectory = FileManager.default.urls(for: .applicationSupportDirectory, in: .userDomainMask).first!
        self.imageDirectoryURL = baseDirectory.appendingPathComponent("Clipboard/images", isDirectory: true)

        // V√Ωpis cesty pri inicializ√°cii
        appLog("üìÇ Adres√°r pre obr√°zky: \(imageDirectoryURL.path)", level: .info)

        if !FileManager.default.fileExists(atPath: imageDirectoryURL.path) {
            do {
                try FileManager.default.createDirectory(at: imageDirectoryURL, withIntermediateDirectories: true)
                appLog("üìÅ Vytvoren√Ω adres√°r: \(imageDirectoryURL.path)", level: .info)
            } catch {
                appLog("‚ùå Chyba pri vytv√°ran√≠ adres√°ra: \(error.localizedDescription)", level: .error)
            }
        }
    }
    
    /// Ulo≈æ√≠ obr√°zok (ako PNG) na disk a vr√°ti n√°zov s√∫boru.
    /// - Parameter data: D√°ta obr√°zka (napr. TIFF z NSPasteboard).
    /// - Returns: N√°zov s√∫boru (napr. `ABCD1234.png`) alebo `nil` pri chybe.
    func saveImage(_ data: Data) -> String? {
        guard let imageRep = NSBitmapImageRep(data: data),
              let pngData = imageRep.representation(using: .png, properties: [:]) else {
            appLog("‚ùå Obr√°zok sa nepodarilo konvertova≈• na PNG.", level: .error)
            return nil
        }

        let filename = UUID().uuidString + ".png"
        let fileURL = imageDirectoryURL.appendingPathComponent(filename)

        // V√Ωpis celej cesty pred ulo≈æen√≠m
        appLog("üì§ Uklad√°m obr√°zok do s√∫boru: \(fileURL.path)", level: .debug)

        do {
            try pngData.write(to: fileURL)
            appLog("üíæ Obr√°zok ulo≈æen√Ω ako: \(filename)", level: .info)
            return filename
        } catch {
            appLog("‚ùå Chyba pri ukladan√≠ obr√°zka: \(error.localizedDescription)", level: .error)
            return nil
        }
    }
}
